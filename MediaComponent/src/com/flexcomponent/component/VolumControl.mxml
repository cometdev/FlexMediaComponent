<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx">
	<fx:Metadata>
		[Event(name="volumChange", type="flash.events.Event")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import flash.events.Event;
			
			private var _volum:Number = 0;
			
			// Mouse Down Check Flag
			private var mouseDownFlag:Boolean = false;
			
			// PlayBar Click Handler
			private function soundBarHandler(event:MouseEvent):void
			{
				var enableFlag:Boolean = false;
				
				switch (event.type) {
					case MouseEvent.CLICK :
						enableFlag = true;
						break;
					case MouseEvent.MOUSE_DOWN :
						mouseDownFlag = true;
						break;
					case MouseEvent.MOUSE_UP :
					case MouseEvent.MOUSE_OUT :
						mouseDownFlag = false;
						return;
						break;
					case MouseEvent.MOUSE_MOVE :
						enableFlag = mouseDownFlag;
						break;
				}
				
				if (enableFlag)
				{
					_volum = (event.localX == volumStage.width)?1:int(event.localX / volumStage.width * 5 + 1) / 5;
					dispVolumBar(_volum);
					dispatchEvent(new Event("volumChange"));
				}
			}
			
			// Volum Bar Display
			private function dispVolumBar(volum:Number):void
			{
				for (var i:int = 1; i <= 5; i++)
				{
					if (i <= int(_volum * 5))
						this["step" + i].alpha = 1.0;
					else
						this["step" + i].alpha = 0.3;
				}
			}
			
			public function get volum():Number
			{
				return _volum;
			}

			[Inspectable(defaultValue="0.6", category="General", verbose="1", type="Number")]
			public function set volum(value:Number):void
			{
				_volum = int(value * 5) / 5;
				dispVolumBar(value);
			}

		]]>
	</fx:Script>
	<s:layout>
		<s:HorizontalLayout verticalAlign="middle"
							gap="2"/>
	</s:layout>
	
	<s:Group id="volumStage"
			 click="soundBarHandler(event)"
			 mouseMove="soundBarHandler(event)"
			 mouseOut="soundBarHandler(event)"
			 mouseDown="soundBarHandler(event)"
			 mouseUp="soundBarHandler(event)">
		<s:layout>
			<s:HorizontalLayout verticalAlign="bottom"
								gap="0"/>
		</s:layout>
		<!-- Level 1 -->
		<s:Rect width="3" height="4">
			<s:stroke>
				<s:SolidColorStroke color="0x222222"/>
			</s:stroke>
			<s:fill>
				<s:SolidColor id="step1"
							  color="0xd1ff62" alpha="0.3"/>
			</s:fill>
		</s:Rect>
		<!-- Level 2 -->
		<s:Rect width="3" height="6">
			<s:stroke>
				<s:SolidColorStroke color="0x222222"/>
			</s:stroke>
			<s:fill>
				<s:SolidColor id="step2"
							  color="0xd1ff62" alpha="0.3"/>
			</s:fill>
		</s:Rect>
		<!-- Level 3 -->
		<s:Rect width="3" height="8">
			<s:stroke>
				<s:SolidColorStroke color="0x222222"/>
			</s:stroke>
			<s:fill>
				<s:SolidColor id="step3"
							  color="0xd1ff62" alpha="0.3"/>
			</s:fill>
		</s:Rect>
		<!-- Level 4 -->
		<s:Rect width="3" height="10">
			<s:stroke>
				<s:SolidColorStroke color="0x222222"/>
			</s:stroke>
			<s:fill>
				<s:SolidColor id="step4"
							  color="0xd1ff62" alpha="0.3"/>
			</s:fill>
		</s:Rect>
		<!-- Level 5 -->
		<s:Rect width="3" height="12">
			<s:stroke>
				<s:SolidColorStroke color="0x222222"/>
			</s:stroke>
			<s:fill>
				<s:SolidColor id="step5"
							  color="0xd1ff62" alpha="0.3"/>
			</s:fill>
		</s:Rect>
	</s:Group>
</s:Group>
